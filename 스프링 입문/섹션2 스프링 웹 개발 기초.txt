섹션2 스프링 웹 개발 기초

3가지 방식
1. 정적 컨텐츠 : 동작하지 않음, 그냥 html파일 그대로 주는거
2. MVC와 템플릿 엔진 : 동적으로 동작, 서버에서 변형해서 주는거, 많이 사용
3. API : react등, 서버끼리 통신할때 등 사용

정적 컨텐츠
* 뭐 찾는 방법
: 걍 구글에 Spring Boot Features 검색해서 spring.io사이트인거 들어가서 ctrl+f로 검색

- resources파일에 static 폴더에 html파일 생성
- 작동원리 :
웹브라우저가 해당 페이지를 요청하면 내장 톰켓 서버가 연결, 스프링 컨테이너에 넘김, 컨트롤러가 존재하지 않으면 static에 넘김, static에서 처리



MVC와 템플릿 엔진

- controller클래스의 mapping함수와 resources - templates의 view(html파일)을 사용, view에서 최종적으로 변수들을 key를 찾아 나온 value로 치환해 html파일을 만들어 전송

- 작동원리 :
웹브라우저가 해당 페이지를 요청하면 내장 톰켓 서버가 연결, 스프링 컨테이너에 넘김, 컨트롤러에서 templates에 넘김, key를 value로 치환해 html파일 만들어 전송



API

- view를 거치지 않고 controller에서 바로 처리됨
- @ResponseBody 어노테이션추가

- 작동원리 :
웹브라우저가 해당 페이지를 요청하면 내장 톰켓 서버가 연결, 스프링 컨테이너에 넘김, 컨트롤러가 있는데 @ResponseBody가 붙어있으면 데이터를 그대로 넘겨야 겠구나함
근데 return하는게 String이면 String Converter라는 애가 처리
객체라면 JsonConveter가 처리(객체를 Json형식으로 바꿈) // 요즘엔 거의 제이슨으로 처리



요약:
정적 컨텐츠 : 파일을 그대로 내려준다
MVC와 템플릿 엔진 : 렌더링이 된 html을 클라이언트에 전달해준다
API : controller 이후과정에서 MVC의 ViewResolver대신 HttpMessageConveter를 이용해 객체를 반환한다
근데 그 Converter로 요즘엔 JsonConverter를 사용한다

* MVC와 API차이, html파일로 만들어서 보내느냐 or Controller에서 그냥 바로 처리하느냐































