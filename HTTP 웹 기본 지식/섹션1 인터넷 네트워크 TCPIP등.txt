섹션1 인터넷 네트워크

[IP(인터넷 프로토콜)]

IP 인터넷 프로토콜 역할
- 지정한 IP주소에 데이터 전달
- 패킷 단위로 데이터 전달
* 패킷정보 : 출발지IP, 목적지IP, 전송데이터, ....

한계 : 비연결성, 비신뢰성, 프로그램 구분
// 패킷소실, 패킷순서...
-> TCP프로토콜이 해결


[TCP, UDP]

* 인터넷 프로토콜 스택의 4계층
애플리케이션 계층 - HTTP, FTP	// 어플리케이션_크롬,게임,채팅프로그램 _Socket
전송 계층 - TCP, UDP		// OS
인터넷 계층 - IP			// OS
네트워크 인터페이스 계층 		// LAN드라이버, LAN장비


TCP 특징
전송 제어 프로토콜 (전송을 어떻게 할지)
- 연결지향 _연결확인
- 데이터 전달 보증
- 순서 보장
* 현재 대부분 TCP 사용

* TCP 3 way handshake
: 1. 클라이언트가 요청을 서버에 보냄
2. 서버가 확인&요청을 클라이언트에 보냄
3. 클라이언트가 확인을 서버에 보냄
// 1. 클라 -> SYN(Synchronize) -> 서버
// 2. 클라 <- SYN+ACK <- 서버
// 3. 클라 -> ACK -> 서버
* 아마 1. SYN이 클라이언트에서 Socket server = new Socket(서버ip, 포트넘버)
2. SYN+ACK이 서버에서 Socket client = accept()
인듯

* 가상연결
: 실제로 연결된게 아님, 논리적으로 연결됏단 의미,
아마 tcp/ip프로그램만든거처럼 그냥 포트번호랑 ip번호를 서로 가지고 있단거인듯


UDP 특징
- 데이터 전달 보증X
- 순서 X
- IP와 같다 +PORT개념 +체크섬
- 빠르고 단순하다는 장점


[PORT] _항구
내가 알고있는 거
한 서버 내에 여러 기능을 여러 포트(스레드)에서 관리

같은 IP 내에서 프로세스 구분
TCP패킷 <-(출발지PORT, 목적지PORT)

* IP가 아파트, PORT가 몇동몇호

0~1023 쓰지말기
~65535까지 사용가능


[DNS]
문제
- IP는 기억하기 어렵다
- IP는 변경될 수 있다

DNS(Domain Name System)
IP주소 대신 도메인을 쓸 수 있게 해줌 //도메인 명을 IP 주소로 변환해줌
ex) 도메인 명 : google.com, IP : 200.200.200.2



























